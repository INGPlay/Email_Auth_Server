name: DEPLOY_ACTION

on:
    push:
        branches: [ "main" ]

env:
    RESOURCES_PATH : ./src/main/resources
    PROFILE_PROD : prod

jobs:
    build:
        name: Deploy
        runs-on: ubuntu-22.04
        environment: production

        steps:
            - uses: actions/checkout@v3

            - run: echo "${{ secrets.APPLICATION_YML }}" > $RESOURCES_PATH/application.yml
            - run: echo "${{ secrets.APPLICATION_PROD }}" > $RESOURCES_PATH/application-prod.yml
            - run: echo "${{ secrets.APPLICATION_SMTP }}" > $RESOURCES_PATH/application-smtpGoogle.yml


            - name: Set up JDK 11
              uses: actions/setup-java@v3
              with:
                  java-version: '11'
                  distribution: 'temurin'

            - name: gradlew 실행 권한
              run: chmod +x ./gradlew


            - name: clean
              run: ./gradlew clean


            - name: build to jar
              run : ./gradlew bootJar


            - name: Docker Login
                # You may pin to the exact commit or the version.
                # uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc
              uses: docker/login-action@v2.2.0
              with:
                  # Username used to log against the Docker registry
                  username: ${{ secrets.DOCKER_USERNAME }}
                  # Password or personal access token used to log against the Docker registry
                  password: ${{ secrets.DOCKER_PASSWORD }}


            - name : Docker Build
              run : docker build -t ${{ secrets.DOCKER_REPOSITORY }} --build-arg PROFILE=$PROFILE_PROD .


            - name : Docker Push
              run : docker push ${{ secrets.DOCKER_REPOSITORY }}


            - name: Remote SSH and Docker Pull private image and Docker Run
              uses: appleboy/ssh-action@v1.0.0
              with:
                  host: ${{ secrets.CLOUD_HOST }}
                  username: ${{ secrets.CLOUD_USERNAME }}
                  key: ${{ secrets.CLOUD_KEY }}
                  port: 22
                  script: |
                      sudo iptables -I INPUT -p tcp --dport 8080 -j ACCEPT
                      sudo iptables -t nat -A PREROUTING -p tcp --dport 8080 -j REDIRECT --to-port 8080
                      sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
                      sudo docker stop $(sudo docker ps -a -q) 
                      sudo docker rm $(sudo docker ps -a -q) 
                      sudo docker pull ${{ secrets.DOCKER_REPOSITORY }}
                      sudo docker run -d -p 8080:8080 --net host ${{ secrets.DOCKER_REPOSITORY }}
                      sudo docker logout
